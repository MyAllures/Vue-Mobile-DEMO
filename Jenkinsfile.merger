// This file only for production branch to merge all company branch.
env.PROJECT_NAME='bison'
pipeline {
    agent {
        kubernetes {
            label "${env.PROJECT_NAME}-merge-builder"
            defaultContainer 'worker'
            yaml """
apiVersion: v1
kind: Pod
metadata:
  annotations:
    branch-name: ${env.BRANCH_NAME}
  labels:
    role: worker
spec:
  imagePullPolicy: IfNotPresent
  imagePullSecrets:
    - name: ciunnotech
  serviceAccountName: manager
  containers:
    - name: worker
      image: unnotechlottery/jenkins-general-worker
      command:
        - cat
      tty: true
"""
        }
    }

    stages {
        stage('deploy image'){
            steps {
                git branch: 'production',
                    credentialsId: 'bitbucket-key',
                    url: "git@bitbucket.org:unnotech/${env.PROJECT_NAME}.git"
                sshagent(['bitbucket-key']) {
                    // sync production to pre-production
                    script{
                        try {
                            production_pull(['pre-production'])
                        } catch (Exception e) {
                            sh 'python /home/app/src/send_group.py There is some error or conflict at pre-production pull the produciton in ${PROJECT_NAME} project please fix manually'
                            sh 'python /home/app/src/send_PR.py --project ${PROJECT_NAME} production pre-production'
                            // error "pre-production pull the produciton Error"
                        }
                        try {
                            production_pull(['master'], 'pre-production')
                        } catch (Exception e) {
                            sh 'python /home/app/src/send_group.py There is some error or conflict at master pull the pre-produciton in ${PROJECT_NAME} project, please fix manually'
                            sh 'python /home/app/src/send_PR.py --project ${PROJECT_NAME} pre-production master'
                            // error "master pull the pre-produciton Error"
                        }
                    }
                    echo "prepare to deploy"
                    production_pull(['8fn3-4-production', 'hg9q-1-production', 'cg8s-3-production', '75ue-2-production'])
                }
            }
        }
    }
}
def production_pull(list, target="production") {
        for (int i = 0; i < list.size(); i++) {
            echo "merging ${list[i]}"
            sh "git checkout -f -b ${list[i]} origin/${list[i]}"
            sh "git pull origin ${target}"
            sh "git push origin ${list[i]}:${list[i]}"
    }
}
